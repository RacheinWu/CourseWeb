<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.he.ssm.dao.other.UsersDao">
    <!--字段映射-->
    <resultMap id="BaseResultMap" type="com.he.ssm.entity.other.Users">
        <id property="id"    column="id"    />
        <result property="userType"    column="userType"    />
        <result property="account"    column="account"    />
        <result property="pwd"    column="pwd"    />
        <result property="age"    column="age"    />
        <result property="phone"    column="phone"    />
        <result property="email"    column="email"    />
        <result property="nickName"    column="nickName"    />
        <result property="avatar"    column="avatar"    />
        <result property="state"    column="state"    />
        <result property="createDate"    column="createDate"    />
    </resultMap>
    <!--所有字段-->
    <sql id="Base_Column_List">
         id, userType, account, pwd, age, phone, email, nickName, avatar, state, createDate    </sql>
    <!--插入-->
    <insert id="insert" parameterType="com.he.ssm.entity.other.Users" keyColumn="id" keyProperty="id" useGeneratedKeys="true">
        insert into users(userType,account,pwd,age,phone,email,nickName,avatar,state,createDate)
        values(#{userType},#{account},#{pwd},#{age},#{phone},#{email},#{nickName},#{avatar},#{state},#{createDate})
    </insert>
    <!--删除-->
    <delete id="deleteByPrimaryKey" parameterType="Long">
        delete from users where id = #{id}
    </delete>
    <!--删除-->
    <delete id="deleteByPrimaryKeyIn">
        delete from users where id in
        <foreach collection="idList" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    <!--更新-->
    <update id="updateByPrimaryKey" parameterType="com.he.ssm.entity.other.Users">
        update users set userType = #{userType}, account = #{account}, pwd = #{pwd}, age = #{age}, phone = #{phone}, email = #{email}, nickName = #{nickName}, avatar = #{avatar}, state = #{state}, createDate = #{createDate}        where id = #{id}
    </update>
    <!--查询-->
    <select id="selectByPrimaryKey" parameterType="Long" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/> from users
        where id = #{id}
    </select>
    <!--查询-->
    <select id="findByCondition" parameterType="com.he.ssm.entity.other.Users" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/> from users
        <where>  
            <if test="account != null  and account != ''"> and account like concat('%', #{account}, '%')</if>
            <if test="phone != null  and phone != ''"> and phone like concat('%', #{phone}, '%')</if>
            <if test="nickName != null  and nickName != ''"> and nickName like concat('%', #{nickName}, '%')</if>
            <if test="state != null  and state != ''"> and state = #{state}</if>
            <if test="userType != null  and userType != '' ">
                <if test="userType != 'admin' ">
                    and userType != 'admin'
                </if>
            </if>
        </where>
    </select>
    <!--查询-->
    <select id="findByAll" parameterType="com.he.ssm.entity.other.Users" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/> from users
        <where>
            <if test="account != null  and account != ''"> and account =#{account}</if>
            <if test="phone != null  and phone != ''"> and phone like concat('%', #{phone}, '%')</if>
            <if test="nickName != null  and nickName != ''"> and nickName like concat('%', #{nickName}, '%')</if>
            <if test="state != null  and state != ''"> and state = #{state}</if>
        </where>
    </select>

<!--auto generated by MybatisCodeHelper on 2021-03-09-->
    <select id="getByAccountAndPwdAndUserType" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from users
        where account=#{account} and pwd=#{pwd} and userType=#{userType}
    </select>
</mapper>