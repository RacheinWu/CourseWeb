<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.he.ssm.dao.other.CoursewareDao">
    <!--字段映射-->
    <resultMap id="BaseResultMap" type="com.he.ssm.entity.other.Courseware">
        <id property="id"    column="id"    />
        <result property="coursewareType"    column="coursewareType"    />
        <result property="tile"    column="tile"    />
        <result property="author"    column="author"    />
        <result property="coursewareUrl"    column="coursewareUrl"    />
        <result property="downloadFlag"    column="downloadFlag"    />
        <result property="lastId"    column="lastId"    />
        <result property="lastTitle"    column="lastTitle"    />
        <result property="nextId"    column="nextId"    />
        <result property="nextTitle"    column="nextTitle"    />
        <result property="state"    column="state"    />
        <result property="createDate"    column="createDate"    />
        <result property="publishDate"    column="publishDate"    />
    </resultMap>
    <!--所有字段-->
    <sql id="Base_Column_List">
         id, coursewareType, tile, author, coursewareUrl, downloadFlag, lastId, lastTitle, nextId, nextTitle, state, createDate, publishDate    </sql>
    <!--插入-->
    <insert id="insert" parameterType="com.he.ssm.entity.other.Courseware" keyColumn="id" keyProperty="id" useGeneratedKeys="true">
        insert into courseware(coursewareType,tile,author,coursewareUrl,downloadFlag,lastId,lastTitle,nextId,nextTitle,state,createDate,publishDate)
        values(#{coursewareType},#{tile},#{author},#{coursewareUrl},#{downloadFlag},#{lastId},#{lastTitle},#{nextId},#{nextTitle},#{state},#{createDate},#{publishDate})
    </insert>
    <!--删除-->
    <delete id="deleteByPrimaryKey" parameterType="Long">
        delete from courseware where id = #{id}
    </delete>
    <!--删除-->
    <delete id="deleteByPrimaryKeyIn">
        delete from courseware where id in
        <foreach collection="idList" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    <!--更新-->
    <update id="updateByPrimaryKey" parameterType="com.he.ssm.entity.other.Courseware">
        update courseware set coursewareType = #{coursewareType}, tile = #{tile}, author = #{author}, coursewareUrl = #{coursewareUrl}, downloadFlag = #{downloadFlag}, lastId = #{lastId}, lastTitle = #{lastTitle}, nextId = #{nextId}, nextTitle = #{nextTitle}, state = #{state}, createDate = #{createDate}, publishDate = #{publishDate}        where id = #{id}
    </update>
    <!--查询-->
    <select id="selectByPrimaryKey" parameterType="Long" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/> from courseware
        where id = #{id}
    </select>
    <!--查询-->
    <select id="findByCondition" parameterType="com.he.ssm.entity.other.Courseware" resultType="com.he.ssm.bean.CoursewareReqBean">
        select <include refid="Base_Column_List"/> from courseware
        <where>  
            <if test="tile != null  and tile != ''"> and tile like concat('%', #{tile}, '%')</if>
            <if test="state != null  and state != ''"> and state = #{state}</if>
            <if test="beginPublishDate != null"> and publishDate <![CDATA[ >= ]]> #{beginPublishDate}</if>
            <if test="endPublishDate != null"> and publishDate <![CDATA[ <= ]]> #{endPublishDate}</if>
        </where>
    </select>
    <!--查询-->
    <select id="findByAll" parameterType="com.he.ssm.entity.other.Courseware" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/> from courseware
        <where>
            <if test="tile != null  and tile != ''"> and tile = #{tile}</if>
            <if test="state != null  and state != ''"> and state = #{state}</if>
            <if test="beginPublishDate != null"> and publishDate <![CDATA[ >= ]]> #{beginPublishDate}</if>
            <if test="endPublishDate != null"> and publishDate <![CDATA[ <= ]]> #{endPublishDate}</if>
        </where>
    </select>
    <!--auto generated by MybatisCodeHelper on 2021-03-09-->
    <update id="updateStateById">
        update courseware
        set `state`=#{updatedState},publishDate=#{publishDate}
        where id=#{id}
    </update>

<!--auto generated by MybatisCodeHelper on 2021-03-11-->
    <select id="findByStateOrderByPublishDateDesc" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from courseware
        where `state`=#{state}
        <if test="search != null  and search != ''"> and (tile like concat('%', #{search}, '%')  or  author  like concat('%', #{search}, '%') )</if>
        order by publishDate desc
    </select>

<!--auto generated by MybatisCodeHelper on 2021-03-11-->
    <select id="getByPublishDateLessThanOrderByPublishDateDesc" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from courseware
        where state='发布' and publishDate <![CDATA[<]]> #{maxPublishDate} order by publishDate desc limit 1
    </select>

<!--auto generated by MybatisCodeHelper on 2021-03-11-->
    <select id="getByPublishDateGreaterThanOrderByPublishDate" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from courseware
        where  state='发布' and publishDate <![CDATA[>]]> #{minPublishDate} order by publishDate asc  limit 1
    </select>
</mapper>